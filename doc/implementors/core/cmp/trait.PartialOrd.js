(function() {var implementors = {};
implementors["constance"] = [{"text":"impl PartialOrd&lt;ResultCode&gt; for ResultCode","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;ActivateTaskError&gt; for ActivateTaskError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;GetCurrentTaskError&gt; for GetCurrentTaskError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;InterruptTaskError&gt; for InterruptTaskError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;SetTaskPriorityError&gt; for SetTaskPriorityError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;ExitTaskError&gt; for ExitTaskError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;CpuLockError&gt; for CpuLockError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;BoostPriorityError&gt; for BoostPriorityError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;TimeError&gt; for TimeError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;AdjustTimeError&gt; for AdjustTimeError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;WaitError&gt; for WaitError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;WaitTimeoutError&gt; for WaitTimeoutError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;ParkError&gt; for ParkError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;ParkTimeoutError&gt; for ParkTimeoutError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;UnparkError&gt; for UnparkError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;UnparkExactError&gt; for UnparkExactError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;SleepError&gt; for SleepError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;UpdateEventGroupError&gt; for UpdateEventGroupError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;GetEventGroupError&gt; for GetEventGroupError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;WaitEventGroupError&gt; for WaitEventGroupError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;WaitEventGroupTimeoutError&gt; for WaitEventGroupTimeoutError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;SetInterruptLinePriorityError&gt; for SetInterruptLinePriorityError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;EnableInterruptLineError&gt; for EnableInterruptLineError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;PendInterruptLineError&gt; for PendInterruptLineError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;ClearInterruptLineError&gt; for ClearInterruptLineError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;QueryInterruptLineError&gt; for QueryInterruptLineError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;StartTimerError&gt; for StartTimerError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;StopTimerError&gt; for StopTimerError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;SetTimerDelayError&gt; for SetTimerDelayError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;SetTimerPeriodError&gt; for SetTimerPeriodError","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;EventGroupWaitFlags&gt; for EventGroupWaitFlags","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Duration&gt; for Duration","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Time&gt; for Time","synthetic":false,"types":[]}];
implementors["errno"] = [{"text":"impl PartialOrd&lt;Errno&gt; for Errno","synthetic":false,"types":[]}];
implementors["log"] = [{"text":"impl PartialOrd&lt;Level&gt; for Level","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;LevelFilter&gt; for Level","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;LevelFilter&gt; for LevelFilter","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Level&gt; for LevelFilter","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PartialOrd&lt;Metadata&lt;'a&gt;&gt; for Metadata&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; PartialOrd&lt;MetadataBuilder&lt;'a&gt;&gt; for MetadataBuilder&lt;'a&gt;","synthetic":false,"types":[]}];
implementors["num_rational"] = [{"text":"impl&lt;T:&nbsp;Clone + Integer&gt; PartialOrd&lt;Ratio&lt;T&gt;&gt; for Ratio&lt;T&gt;","synthetic":false,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl PartialOrd&lt;Ident&gt; for Ident","synthetic":false,"types":[]}];
implementors["regex_syntax"] = [{"text":"impl PartialOrd&lt;Span&gt; for Span","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Position&gt; for Position","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Literal&gt; for Literal","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;ClassUnicodeRange&gt; for ClassUnicodeRange","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;ClassBytesRange&gt; for ClassBytesRange","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Utf8Sequence&gt; for Utf8Sequence","synthetic":false,"types":[]},{"text":"impl PartialOrd&lt;Utf8Range&gt; for Utf8Range","synthetic":false,"types":[]}];
implementors["staticvec"] = [{"text":"impl&lt;const N:&nbsp;usize&gt; PartialOrd&lt;StaticString&lt;N&gt;&gt; for StaticString&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const N:&nbsp;usize&gt; PartialOrd&lt;str&gt; for StaticString&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;const N:&nbsp;usize, '_&gt; PartialOrd&lt;&amp;'_ str&gt; for StaticString&lt;N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T1, T2:&nbsp;PartialOrd&lt;T1&gt;, const N1:&nbsp;usize, const N2:&nbsp;usize&gt; PartialOrd&lt;StaticVec&lt;T1, N1&gt;&gt; for StaticVec&lt;T2, N2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T1, T2:&nbsp;PartialOrd&lt;T1&gt;, const N1:&nbsp;usize, const N2:&nbsp;usize, '_&gt; PartialOrd&lt;StaticVec&lt;T1, N1&gt;&gt; for &amp;'_ StaticVec&lt;T2, N2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T1, T2:&nbsp;PartialOrd&lt;T1&gt;, const N1:&nbsp;usize, const N2:&nbsp;usize, '_&gt; PartialOrd&lt;StaticVec&lt;T1, N1&gt;&gt; for &amp;'_ mut StaticVec&lt;T2, N2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T1, T2:&nbsp;PartialOrd&lt;T1&gt;, const N1:&nbsp;usize, const N2:&nbsp;usize, '_&gt; PartialOrd&lt;&amp;'_ StaticVec&lt;T1, N1&gt;&gt; for StaticVec&lt;T2, N2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T1, T2:&nbsp;PartialOrd&lt;T1&gt;, const N1:&nbsp;usize, const N2:&nbsp;usize, '_&gt; PartialOrd&lt;&amp;'_ mut StaticVec&lt;T1, N1&gt;&gt; for StaticVec&lt;T2, N2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T1, T2:&nbsp;PartialOrd&lt;T1&gt;, const N1:&nbsp;usize, const N2:&nbsp;usize&gt; PartialOrd&lt;[T1; N1]&gt; for StaticVec&lt;T2, N2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T1, T2:&nbsp;PartialOrd&lt;T1&gt;, const N1:&nbsp;usize, const N2:&nbsp;usize, '_&gt; PartialOrd&lt;[T1; N1]&gt; for &amp;'_ StaticVec&lt;T2, N2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T1, T2:&nbsp;PartialOrd&lt;T1&gt;, const N1:&nbsp;usize, const N2:&nbsp;usize, '_&gt; PartialOrd&lt;[T1; N1]&gt; for &amp;'_ mut StaticVec&lt;T2, N2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T1, T2:&nbsp;PartialOrd&lt;T1&gt;, const N1:&nbsp;usize, const N2:&nbsp;usize, '_&gt; PartialOrd&lt;&amp;'_ [T1; N1]&gt; for StaticVec&lt;T2, N2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T1, T2:&nbsp;PartialOrd&lt;T1&gt;, const N1:&nbsp;usize, const N2:&nbsp;usize, '_&gt; PartialOrd&lt;&amp;'_ mut [T1; N1]&gt; for StaticVec&lt;T2, N2&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T1, T2:&nbsp;PartialOrd&lt;T1&gt;, const N:&nbsp;usize&gt; PartialOrd&lt;[T1]&gt; for StaticVec&lt;T2, N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T1, T2:&nbsp;PartialOrd&lt;T1&gt;, const N:&nbsp;usize, '_&gt; PartialOrd&lt;[T1]&gt; for &amp;'_ StaticVec&lt;T2, N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T1, T2:&nbsp;PartialOrd&lt;T1&gt;, const N:&nbsp;usize, '_&gt; PartialOrd&lt;[T1]&gt; for &amp;'_ mut StaticVec&lt;T2, N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T1, T2:&nbsp;PartialOrd&lt;T1&gt;, const N:&nbsp;usize, '_&gt; PartialOrd&lt;&amp;'_ [T1]&gt; for StaticVec&lt;T2, N&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T1, T2:&nbsp;PartialOrd&lt;T1&gt;, const N:&nbsp;usize, '_&gt; PartialOrd&lt;&amp;'_ mut [T1]&gt; for StaticVec&lt;T2, N&gt;","synthetic":false,"types":[]}];
implementors["syn"] = [{"text":"impl PartialOrd&lt;Lifetime&gt; for Lifetime","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()